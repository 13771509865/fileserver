server:
  port: 8091
#  servlet:
#    context-path: /fileserver

spring:
  main:
    allow-bean-definition-overriding: true

  devtools:
    restart:
      enabled: false       #热部署

  servlet:
    multipart:                  #上传文件配置
      enabled: true             #是否支持文件上传
      max-file-size: 100MB      #最大文件大小
      max-request-size: 100MB   #最大请求大小(多文件上传总大小限制)

  datasource:
    druid:                          #springboot2不支持配置继承,如多数据源每个要写完整配置
      one:
#        driver-class-name: dm.jdbc.driver.DmDriver
        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:dm://192.168.1.3:5236/FILESERVER?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=utf-8          #数据库连接url
        url: jdbc:mysql://172.18.21.24:3306/fileserver?characterEncoding=utf-8&serverTimezone=Asia/Shanghai          #数据库连接url
        username: yozo                            #数据库用户名
        password: yozosoft                          #数据库密码
        #        username: root                            #数据库用户名
        #        password: 123456                          #数据库密码
        max-active: 2000                 # 最大连接池数量
        initial-size: 10                # 初始化时建立物理连接的个数
        max-wait: 3000                 # 获取连接时最大等待时间,单位毫秒
        min-idle: 10                    # 最小连接池数量
        time-between-eviction-runs-millis: 60000   # 有两个含义:1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据,详细看testWhileIdle属性的说明
        min-evictable-idle-time-millis: 300000     # Destory线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于minEvictableIdleTimeMillis,则关闭当前连接
        validation-query: select 1     # 用来检测连接是否有效的sql
        test-while-idle: true           # 建议配置为true,不影响性能,并且保证安全性,申请连接的时候检测,如果空闲时间大于timeBetweenEvictionRunsMillis,执行validationQuery检测连接是否有效
        test-on-borrow: false           # 申请连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能
        test-on-return: false           # 归还连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能

  redis:
    database: 2 # Redis数据库索引（默认为0）
    timeout: 20000 #设置客户端超时时间，单位是毫秒，默认为2000
    password: yozosoft #密码
    #单机版
    host: 172.18.21.24
    port: 6379
    #集群版
    #    cluster:
    #      max-redirects: 3  # 获取失败 最大重定向次数
    #      nodes:
    #        - 127.0.0.1:6379
    #        - 192.168.91.5:9002
    lettuce:
      pool:
        max-active: 2000 #连接池最大连接数（使用负值表示没有限制）
        max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 300 #最大空闲数
        min-idle: 0 #最小空闲数
      shutdown-timeout: 1000

mybatis:
  mapper-locations: classpath:mapping/mysql/*.xml
  type-aliases-package: com.yozosoft.fileserver.model

#分页插件配置
pagehelper:
  helperDialect: mysql  #数据库连接
  reasonable: true      #分页合理化参数,如超过最后一页修正
  supportMethodsArguments: true    #支持通过 Mapper 接口参数来传递分页参数，直接传分页参数支持分页(pageNum,pageSize)
  page-size-zero: true  #如果pageSize为0则查询全部结果

#actuator,spring监控服务
management:
  endpoint:
    health:
      show-details: always   #显示健康具体信息  默认不会显示详细信息
  endpoints:
    web:
      base-path: /actuator   #修改访问路径
      exposure:
        include: "*"           #开放所有页面节点  默认只开启了health、info两个节点

#httpclient相关优化配置
http:
  maxTotal: 4000                      #设置最大连接数
  defaultMaxPerRoute: 4000            #设置每个主机地址的并发数
  connectTimeout: 2000               #创建连接的最长时间
  connectionRequestTimeout: 2000     #从连接池中获取到连接的最长时间
  socketTimeout: 180000               #数据传输的最长时间（毫秒）
  maxIdleTime: 60000                 #空闲时间(用于定期清理空闲连接)

yfs:
  workId: 1         #范围是0-1024
  storage:
    type: 2         #0-本地存储，1-Oss，2-Obs, 3-minio
    localRootPath: /users/appdata/files/source      #针对本地存储设置的存储根目录
    endPoint: https://obs.cn-east-2.myhuaweicloud.com
    accessKey: UF740COJY9EEWPIMZOMU
    secretKey: iLpQKvHhOMtw3ZK9zCAdFvhMaGPTSemZanSP6TNX
    bucketName: yozonetdriver
  downloadRoot: /users/appdata/files/download
  tempPath: /users/appdata/files/temp
  downloadDomain: http://172.18.21.24:8091/fileserver
  signSecret: qaxet9223210^*&

app:
  callback:
    yzcloud:
      enable: true
      url: http://172.18.21.24/epdrive/completeUpload

#客户端配置
feign:
  okhttp:
    enabled: true
  hystrix:
    enabled: true

ribbon:
  ReadTimeout: 3000   #负载均衡超时时间
  ConnectTimeout: 3000    #ribbon请求连接的超时时间

hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 6000   #hystrix的超时时间需要大于ribbon的超时时间
  threadpool:
    default:
      coreSize: 10
      maxQueueSize: 3000
      queueSizeRejectionThreshold: 3000